services:
  patients-db:
      image: postgres:latest
      container_name: patients-db
      environment:
        POSTGRES_USER: test
        POSTGRES_PASSWORD: test
        POSTGRES_DB: patients
      ports:
        - "5432:5432"
      volumes:
        - ./PatientManagementPostgres:/docker-entrypoint-initdb.d
      networks:
        - hospital-network
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U test -d patients"]
        interval: 10s
        timeout: 5s
        retries: 5

  research-db:
    image: postgres:latest
    container_name: research-db
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: research
    ports:
      - "5433:5432"
    volumes:
      - ./ResearchPostgres:/docker-entrypoint-initdb.d
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d research"]
      interval: 10s
      timeout: 5s
      retries: 5

  metrics_collector:
      build:
        context: ./MetricsComputationService
        dockerfile: Dockerfile
      environment:
        DB_NAME: research
        DB_USER: test
        DB_PASSWORD: test
        DB_HOST: research-db
        DB_PORT: 5432
      networks:
        - hospital-network
      depends_on:
        - research-db

  grafana:
      image: grafana/grafana:latest
      ports:
        - "3100:3000"
      environment:
        GF_SECURITY_ADMIN_PASSWORD: admin
      networks:
        - hospital-network
      depends_on:
        - prometheus

  prometheus:
      image: prom/prometheus:latest
      ports:
        - "9091:9090"
      volumes:
        - ./MetricsComputationService/prometheus.yml:/etc/prometheus/prometheus.yml
      networks:
        - hospital-network


  anonymization-service:
    build:
      context: ./AnonymizationService
      dockerfile: Dockerfile
    ports:
      - "8082:8081"
    networks:
      - hospital-network
    depends_on:
      - research-db

  patient-management-service:
    build:
      context: ./PatientManagementService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - hospital-network
    depends_on:
      - patients-db

  load-generator-backend:
    build: DataGeneratorBackend
    container_name: load-generator-backend-container
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
    networks:
      - hospital-network

  load-generator-frontend:
    build: DataGeneratorFrontend
    container_name: load-generator-frontend-container
    ports:
      - "3001:3001"  # Expose port 3001 for the frontend
    depends_on:
      - load-generator-backend
    networks:
      - hospital-network

  research-service:
    build:
      context: ./ResearchService
    ports:
      - "3002:3002"
    depends_on:
      - research-db
      - opa
    networks:
      - hospital-network

  opa:
    build:
      context: ./AccessControlGateway/opa
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    networks:
      - hospital-network

networks:
  hospital-network:
    driver: bridge
